name: Deploy Client and Server to EC2

on:
  push:
    branches:
      - main  # Triggers deployment on push to main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout repository code
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22.x'

    # Install dependencies and build the client
    - name: Build client
      working-directory: ./client
      run: |
        npm install
        npm run build

    # Install dependencies and build the server
    - name: Install server dependencies
      working-directory: ./server
      run: npm install

    # Deploy to EC2 server via SSH
    - run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
        ssh -i ~/.ssh/id_rsa -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
    
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          # Navigate to the app directory on EC2
          cd expense-client-server

          # Pull the latest changes from the repository
          git pull origin main

          # Install server dependencies on EC2
          cd server
          npm install
          pm2 restart all  # Restart Node.js server using PM2 (if you're using it)

          # Navigate to the client directory
          cd ../client

          # Copy the client build files to the appropriate directory (e.g., /var/www/html for Nginx)
          
          sudo scp -i ~/.ssh/id_rsa -P ${{ secrets.SSH_PORT }} build/build.tar.gz ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/ec2-user/expense-client-server
          ssh -i ~/.ssh/id_rsa -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd /home/ec2-user/expense-client-server
            rm -rf *.html *.js *.css static *.json *.ico
            tar -xzf build.tar.gz
            mv build/* .
            rm -rf build build.tar.gz
          EOF

